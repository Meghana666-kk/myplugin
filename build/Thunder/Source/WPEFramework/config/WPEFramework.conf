from json_helper import *
version = '1.0.'
port = '9998'
binding = '127.0.0.1'
ipv6 = 'false'
idletime = '180'
softkillcheckwaittime = '10'
hardkillcheckwaittime = '4'
persistentpath = '/home/mkk/netmgr/install/var/wpeframework/WPEFramework'
volatilepath = 'tmp'
datapath = '/home/mkk/netmgr/install/usr/share/WPEFramework'
systempath = '/home/mkk/netmgr/install/usr/lib/wpeframework/plugins'
proxystubpath = '/home/mkk/netmgr/install/usr/lib/wpeframework/proxystubs'
postmortempath = '/opt/minidumps'
redirect = '/Service/Controller/UI'
ethernetcard = 'eth0'
communicator = ''

process = JSON()
process.add("priority", '0')
process.add("policy", 'OTHER')
process.add("oomadjust", '0')
process.add("stacksize", '0')

__umask = ''

if(__umask != ''):
  process.add("umask", str(int(__umask, 8)))

process.add("group", '')

__exitreasons = 'Failure;MemoryExceeded;WatchdogExpired'
exitreasons = __exitreasons.split(';')

__plugins = []

__subsystems = ''
__resumes = []

if boolean(''):
  __resumes.append("WebKitBrowser")

if boolean(''):
  __resumes.append("EspialBrowser")

if boolean(''):
  __resumes.append("WebServer")

__controller_plugin_configuration = JSON()
__controller_plugin_configuration.add("subsystems", __subsystems.split(' '))
__controller_plugin_configuration.add("resumes", __resumes)

__controller_plugin = JSON()
__controller_plugin.add("callsign", "Controller")
__controller_plugin.add("configuration", __controller_plugin_configuration)

__plugins.append(__controller_plugin)

plugins = __plugins

__vitualinput = JSON()
if boolean(''):
  if boolean('false'):
    __vitualinput.add("type", "vitual")
    __vitualinput.add("output", False)
    input = __vitualinput
else:
  __vitualinput.add("locator", "/dev/uinput")
  __vitualinput.add("type", "device")
  if boolean('false'):
    __vitualinput.add("output", False)
  input = __vitualinput

if boolean('ON'):
  messaging = JSON()
  messaging.add("path", 'MessageDispatcher')
  messaging.add("port", '0')

  __notification = {
       "category" : "AnyCategory",
       "enabled" : False
      }
  
  __fatal = {
       "category" : "AnyCategory",
       "enabled" : True
      }

  __tracing = {
       "module" : "Plugin_AnyModule",
       "enabled" : True
      }
  
  __warningReporting = {
       "category" : "AnyCategory",
       "enabled" : False
      }

  __logging_settings = []
  __logging_settings.append(__notification)
  
  __logging = JSON()
  __logging.add("abbreviated", True)
  __logging.add("settings", __logging_settings)
  
  messaging.add("logging", __logging)
  
  __tracing_settings = []
  __tracing_settings.append(__fatal)
  __tracing_settings.append(__tracing)
  
  __tracing = JSON()
  __tracing.add("settings", __tracing_settings)
  
  messaging.add("tracing", __tracing)

  __reporting_settings = []
  __reporting_settings.append(__warningReporting)

  __reporting = JSON()
  __reporting.add("abbreviated", True)
  __reporting.add("settings", __reporting_settings)

  messaging.add("reporting", __reporting)
